<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbortedWatchingBeacons" xml:space="preserve">
    <value>Die Suche nach Bluetooth Beacons wurde abgebrochen, z.B. weil Bluetooth deaktiviert war oder wurde. Tippe auf diese Nachricht um einen neuen Versuch zu starten. In Windows 10, aktiviere: Einstellungen -&gt; Datenschutz -&gt; Weitere Geräte -&gt; Mit Geräten synchronisieren (Beispiel: Beacons)</value>
  </data>
  <data name="About.Text" xml:space="preserve">
    <value>Über</value>
  </data>
  <data name="AboutText1.Text" xml:space="preserve">
    <value>Entwickelt von Andreas Jakl.</value>
  </data>
  <data name="AboutText2.Text" xml:space="preserve">
    <value>Lade das Open Source Universal Beacon Library für Windows 10 herunter:</value>
  </data>
  <data name="AdvertisementFrameCount.Text" xml:space="preserve">
    <value>Anzahl der Advertisement frames: </value>
  </data>
  <data name="BatteryInMilliV.Text" xml:space="preserve">
    <value>Batterie [mV]: </value>
  </data>
  <data name="BlogButton.Content" xml:space="preserve">
    <value>Blog</value>
  </data>
  <data name="BlogButton.NavigateUri" xml:space="preserve">
    <value>https://www.andreasjakl.com</value>
  </data>
  <data name="BluetoothAddress.Text" xml:space="preserve">
    <value>Adresse: </value>
  </data>
  <data name="ContactEmailButton.Content" xml:space="preserve">
    <value>Kontakt (email)</value>
  </data>
  <data name="ContactEmailButton.NavigateUri" xml:space="preserve">
    <value>mailto:andreas.jakl@live.com</value>
  </data>
  <data name="ErrorConsentRequired" xml:space="preserve">
    <value>Zustimmung durch den Nutzer ist erforderlich für die Bluetooth Suche, wurde aber nicht gewährt.</value>
  </data>
  <data name="ErrorDeviceNotConnected" xml:space="preserve">
    <value>Konnte keine Verbindung zu einem Bluetooth Low Energy kompatiblen Modul herstellen. Bitte stelle sicher, dass es verfügbar und aktiviert ist (z.B. kein aktivierter Flugzeug-Modus) und versuche es später noch einmal.</value>
  </data>
  <data name="ErrorDisabledByPolicy" xml:space="preserve">
    <value>Eine Policy deines Geräts schränkt den Zugriff dieser App auf das Bluetooth Modul ein. Bitte stelle sicher, dass du der App Zugriff auf Bluetooth bzw. Proximity erlaubst. In Windows 10, aktiviere: Einstellungen -&gt; Datenschutz -&gt; Weitere Geräte -&gt; Mit Geräten synchronisieren (Beispiel: Beacons)</value>
  </data>
  <data name="ErrorDisabledByUser" xml:space="preserve">
    <value>Bluetooth Suche wurde durch den Nutzer deaktiviert.</value>
  </data>
  <data name="ErrorNoRadioAvailable" xml:space="preserve">
    <value>Kein Bluetooth Low Energy-kompatibles Modul ist verfügbar, oder es wurde in deinem System deaktiviert (z.B. durch einen aktivierten Flugzeug-Modus).</value>
  </data>
  <data name="ErrorNotSupported" xml:space="preserve">
    <value>Zugriff auf das Bluetooth Low Energy Modul ist in deinem Gerät nicht unterstützt. Bitte stelle sicher, dass das Gerät die erforderliche Hardware enthält und dass diese aktiviert ist.</value>
  </data>
  <data name="ErrorOtherError" xml:space="preserve">
    <value>Bluetooth Suche gestoppt - ein unerwarteter Fehler wurde vom Betriebssystem gemeldet.</value>
  </data>
  <data name="ErrorResourceInUse" xml:space="preserve">
    <value>Das Bluetooth-Modul wird bereits verwendet und wir konnten keinen Zugriff erhalten. Bitte versuche es später noch einmal!</value>
  </data>
  <data name="ErrorTransportNotSupported" xml:space="preserve">
    <value>Das Bluetooth Protokoll wird nicht unterstützt.</value>
  </data>
  <data name="FailedRestartingBluetoothWatch" xml:space="preserve">
    <value>Konnte die Bluetooth Suche nicht neu starten. Bitte stelle sicher, dass Bluetooth aktiviert ist und der Flugzeug-Modus deaktiviert ist. Tippe auf diese Nachricht, um es noch einmal zu versuchen.In Windows 10, aktiviere: Einstellungen -&gt; Datenschutz -&gt; Weitere Geräte -&gt; Mit Geräten synchronisieren (Beispiel: Beacons)</value>
  </data>
  <data name="Info.Text" xml:space="preserve">
    <value>&lt; Info</value>
  </data>
  <data name="InstanceId.Text" xml:space="preserve">
    <value>Instanz ID: </value>
  </data>
  <data name="Instructions.Text" xml:space="preserve">
    <value>Sucht kontinuierlich nach Bluetooth Beacons in der Nähe deines Geräts. Wenn ein Beacon gefunden wird, wird dessen Nachricht automatisch analysiert – derzeit für Eddystone™, ein offenes Bluetooth® Smart Beacon Format von Google®, sowie für Beacons, die kompatibel zum iBeacon™ Format von Apple® sind.

Stelle sicher, dass dein Gerät Bluetooth LE unterstützt und dass Bluetooth in deinem Gerät aktiviert ist!</value>
  </data>
  <data name="LibraryUrlButton.Content" xml:space="preserve">
    <value>github.com/andijakl/universal-beacon</value>
  </data>
  <data name="LibraryUrlButton.NavigateUri" xml:space="preserve">
    <value>https://github.com/andijakl/universal-beacon</value>
  </data>
  <data name="Major.Text" xml:space="preserve">
    <value>Major:</value>
  </data>
  <data name="Minor.Text" xml:space="preserve">
    <value>Minor:</value>
  </data>
  <data name="NamespaceId.Text" xml:space="preserve">
    <value>Namespace ID: </value>
  </data>
  <data name="Payload.Text" xml:space="preserve">
    <value>Payload: </value>
  </data>
  <data name="Privacy.Text" xml:space="preserve">
    <value>Datenschutz</value>
  </data>
  <data name="PrivacyText.Text" xml:space="preserve">
    <value>Die App sammelt, speichert und versendet keine Daten, die eine persönliche Identifikation zulassen.</value>
  </data>
  <data name="RangingData.Text" xml:space="preserve">
    <value>Ranging Data: </value>
  </data>
  <data name="RestartWatchingBeacons" xml:space="preserve">
    <value>Versuche gerade, die Suche nach Beacons neu zu starten ...</value>
  </data>
  <data name="Rssi.Text" xml:space="preserve">
    <value>Signalstärke [dBm]: </value>
  </data>
  <data name="Status.Text" xml:space="preserve">
    <value>Status: </value>
  </data>
  <data name="StoppedWatchingBeacons" xml:space="preserve">
    <value>Die Suche nach Beacons wurde gestoppt. Tippe auf diese Nachricht, um die Suche neu zu starten.</value>
  </data>
  <data name="TemperatureInC.Text" xml:space="preserve">
    <value>Temperatur [°C]: </value>
  </data>
  <data name="Terms.Text" xml:space="preserve">
    <value>Terms &amp; Conditions</value>
  </data>
  <data name="TermsText.Text" xml:space="preserve">
    <value>Diese App ist ein Open Source Beispiel für das Universal Beacon Library. Eddystone™ ist ein offenes Bluetooth® Smart Beacon Format von Google, veröffentlicht unter der Apache License. iBeacon™ ist ein Trademark von Apple Inc.</value>
  </data>
  <data name="TimeSincePowerUp.Text" xml:space="preserve">
    <value>Zeit seit Neustart [.1 s]: </value>
  </data>
  <data name="TwitterButton.Content" xml:space="preserve">
    <value>Auf Twitter folgen</value>
  </data>
  <data name="TwitterButton.NavigateUri" xml:space="preserve">
    <value>https://twitter.com/andijakl</value>
  </data>
  <data name="TxPower.Text" xml:space="preserve">
    <value>TX Power:</value>
  </data>
  <data name="Updated.Text" xml:space="preserve">
    <value>Letztes Update: </value>
  </data>
  <data name="Url.Text" xml:space="preserve">
    <value>URL: </value>
  </data>
  <data name="Uuid.Text" xml:space="preserve">
    <value>UUID:</value>
  </data>
  <data name="Version.Text" xml:space="preserve">
    <value>Version: </value>
  </data>
  <data name="WatchingForBeacons" xml:space="preserve">
    <value>Suche nach Bluetooth Beacons</value>
  </data>
  <data name="WatchingSuccessfullyStopped" xml:space="preserve">
    <value>Die Suche nach Beacons wurde erfolgreich gestoppt. Tippe auf diese Nachricht, um die Suche neu zu starten.</value>
  </data>
</root>