<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AbortedWatchingBeacons" xml:space="preserve">
    <value>Watching for beacons has been aborted, e.g., because Bluetooth is / was deactivated. Tap to try restarting. In Windows 10, turn on Settings -&gt; Privacy -&gt;Other devices -&gt; Sync with devices.</value>
  </data>
  <data name="About.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutText1.Text" xml:space="preserve">
    <value>Developed by Andreas Jakl.</value>
  </data>
  <data name="AboutText2.Text" xml:space="preserve">
    <value>Download the open source universal beacon library for Windows 10 from:</value>
  </data>
  <data name="AdvertisementFrameCount.Text" xml:space="preserve">
    <value>Advertisement frame count: </value>
  </data>
  <data name="BatteryInMilliV.Text" xml:space="preserve">
    <value>Battery [mV]: </value>
  </data>
  <data name="BlogButton.Content" xml:space="preserve">
    <value>Blog</value>
  </data>
  <data name="BlogButton.NavigateUri" xml:space="preserve">
    <value>https://www.andreasjakl.com</value>
  </data>
  <data name="BluetoothAddress.Text" xml:space="preserve">
    <value>Address: </value>
  </data>
  <data name="ContactEmailButton.Content" xml:space="preserve">
    <value>Contact per email</value>
  </data>
  <data name="ContactEmailButton.NavigateUri" xml:space="preserve">
    <value>mailto:andreas.jakl@live.com</value>
  </data>
  <data name="EidEddystoneFrame" xml:space="preserve">
    <value>EID Frame</value>
  </data>
  <data name="EphemeralIdentifier.Text" xml:space="preserve">
    <value>Ephemeral Identifier:</value>
  </data>
  <data name="ErrorConsentRequired" xml:space="preserve">
    <value>User consent is required to watch for Bluetooth Beacons.</value>
  </data>
  <data name="ErrorDeviceNotConnected" xml:space="preserve">
    <value>Could not connect to the Bluetooth Low Energy compatible radio module in your device. Please ensure it is available and activated (e.g., no active flight mode) and try again later.</value>
  </data>
  <data name="ErrorDisabledByPolicy" xml:space="preserve">
    <value>A policy restricts this app to access your Bluetooth radio module. Please make sure you allow the app to access Bluetooth / proximity. In Windows 10, turn on Settings -&gt; Privacy -&gt;Other devices -&gt; Sync with devices.</value>
  </data>
  <data name="ErrorDisabledByUser" xml:space="preserve">
    <value>Watching for Bluetooth Beacons has been disabled by the user.</value>
  </data>
  <data name="ErrorNoRadioAvailable" xml:space="preserve">
    <value>No Bluetooth Low Energy compatible radio module is available, or it has been deactivated in your system (e.g., due to active flight mode)</value>
  </data>
  <data name="ErrorNotSupported" xml:space="preserve">
    <value>Accessing the Bluetooth Low Energy Radio is not supported on your device. Please ensure your device has the hardware needed to scan for Bluetooth Beacons and that it is activated.</value>
  </data>
  <data name="ErrorOtherError" xml:space="preserve">
    <value>Watching for Bluetooth Beacons has stopped - an unexpected error has been reported by the system.</value>
  </data>
  <data name="ErrorResourceInUse" xml:space="preserve">
    <value>The Bluetooth radio is already in use and we could not get access. Please try again later.</value>
  </data>
  <data name="ErrorTransportNotSupported" xml:space="preserve">
    <value>Bluetooth transport protocol not supported.</value>
  </data>
  <data name="FailedRestartingBluetoothWatch" xml:space="preserve">
    <value>Failed to restart Bluetooth scanning. Please make sure Bluetooth is activated on your device and flight mode is deactivated. Tap here to try again. In Windows 10, turn on Settings -&gt; Privacy -&gt;Other devices -&gt; Sync with devices.</value>
  </data>
  <data name="Info.Text" xml:space="preserve">
    <value>&lt; Info</value>
  </data>
  <data name="InstanceId.Text" xml:space="preserve">
    <value>Instance ID: </value>
  </data>
  <data name="Instructions.Text" xml:space="preserve">
    <value>Continuously scans for Bluetooth Beacons close to your device. If a beacon is found, its message is parsed – currently for Eddystone™, an open Bluetooth® beacon format from Google®, as well as beacons compatible to the iBeacon™ format by Apple®.

Make sure your device supports Bluetooth LE and that Bluetooth is activated in your device settings!</value>
  </data>
  <data name="LibraryUrlButton.Content" xml:space="preserve">
    <value>github.com/andijakl/universal-beacon</value>
  </data>
  <data name="LibraryUrlButton.NavigateUri" xml:space="preserve">
    <value>https://github.com/andijakl/universal-beacon</value>
  </data>
  <data name="Major.Text" xml:space="preserve">
    <value>Major:</value>
  </data>
  <data name="MajorId.Text" xml:space="preserve">
    <value>Major ID</value>
  </data>
  <data name="Minor.Text" xml:space="preserve">
    <value>Minor:</value>
  </data>
  <data name="MinorId.Text" xml:space="preserve">
    <value>Minor ID</value>
  </data>
  <data name="NamespaceId.Text" xml:space="preserve">
    <value>Namespace ID: </value>
  </data>
  <data name="Payload.Text" xml:space="preserve">
    <value>Payload: </value>
  </data>
  <data name="Privacy.Text" xml:space="preserve">
    <value>Privacy</value>
  </data>
  <data name="PrivacyText.Text" xml:space="preserve">
    <value>The app does not store, collect or transmit any personally identifiable data.</value>
  </data>
  <data name="ProximityBeaconFrame" xml:space="preserve">
    <value>Proximity Frame</value>
  </data>
  <data name="RangingData.Text" xml:space="preserve">
    <value>Ranging Data: </value>
  </data>
  <data name="RestartWatchingBeacons" xml:space="preserve">
    <value>Attempting to restart watching for beacons ...</value>
  </data>
  <data name="Rssi.Text" xml:space="preserve">
    <value>Signal strength [dBm]: </value>
  </data>
  <data name="Status.Text" xml:space="preserve">
    <value>Status: </value>
  </data>
  <data name="StoppedWatchingBeacons" xml:space="preserve">
    <value>Stopped watching for beacons. Tap here to restart.</value>
  </data>
  <data name="TemperatureInC.Text" xml:space="preserve">
    <value>Temperature [°C]: </value>
  </data>
  <data name="Terms.Text" xml:space="preserve">
    <value>Terms &amp; Conditions</value>
  </data>
  <data name="TermsText.Text" xml:space="preserve">
    <value>This application is an open source sample for the universal beacon library. Eddystone is an open Bluetooth® Smart beacon format from Google, released under Apache License. iBeacon™ is a Trademark by Apple Inc.</value>
  </data>
  <data name="TimeSincePowerUp.Text" xml:space="preserve">
    <value>Time since power up [.1 s]: </value>
  </data>
  <data name="TlmEddystoneFrame" xml:space="preserve">
    <value>Telemetry Frame</value>
  </data>
  <data name="TwitterButton.Content" xml:space="preserve">
    <value>Follow on Twitter</value>
  </data>
  <data name="TwitterButton.NavigateUri" xml:space="preserve">
    <value>https://twitter.com/andijakl</value>
  </data>
  <data name="TxPower.Text" xml:space="preserve">
    <value>TX Power:</value>
  </data>
  <data name="UidEddystoneFrame" xml:space="preserve">
    <value>UID Frame</value>
  </data>
  <data name="UnknownBeaconFrame" xml:space="preserve">
    <value>Unknown Frame</value>
  </data>
  <data name="Updated.Text" xml:space="preserve">
    <value>Updated: </value>
  </data>
  <data name="Url.Text" xml:space="preserve">
    <value>URL: </value>
  </data>
  <data name="UrlEddystoneFrame" xml:space="preserve">
    <value>URL Frame</value>
  </data>
  <data name="Uuid.Text" xml:space="preserve">
    <value>UUID</value>
  </data>
  <data name="Version.Text" xml:space="preserve">
    <value>Version: </value>
  </data>
  <data name="WatchingForBeacons" xml:space="preserve">
    <value>Watching for Bluetooth Beacons</value>
  </data>
  <data name="WatchingSuccessfullyStopped" xml:space="preserve">
    <value>Successfully stopped watching for Bluetooth Beacons. Tap here to restart.</value>
  </data>
</root>